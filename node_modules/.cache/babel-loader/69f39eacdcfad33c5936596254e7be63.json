{"remainingRequest":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/babel-loader/lib/index.js!/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/src/store/modules/tags.js","dependencies":[{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/src/store/modules/tags.js","mtime":1670234661647},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/cache-loader/dist/cjs.js","mtime":1670213592618},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/babel-loader/lib/index.js","mtime":1670213592708}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3NhZ2ludGF5ZXZ2L0Rlc2t0b3AvTXkgQ291cnNlL3Z1ZS1naXQvbWVkaXVtLWNsb25lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCmltcG9ydCB0YWdBcGkgZnJvbSAiQC9hcGkvdGFncyI7CnZhciBzdGF0ZSA9IHsKICBkYXRhOiBudWxsLAogIGlzTG9hZGluZzogZmFsc2UsCiAgZXJyb3I6IG51bGwKfTsKdmFyIGdldHRlcnMgPSB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmRhdGE7CiAgfSwKICBlcnJvcjogZnVuY3Rpb24gZXJyb3Ioc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5lcnJvcjsKICB9Cn07CmV4cG9ydCB2YXIgbXV0YXRpb25zVHlwZXMgPSB7CiAgZ2V0VGFnU3RhcnQ6ICdbdGFnc10gR2V0IHRhZyBzdGFydCcsCiAgZ2V0VGFnU3VjY2VzczogJ1t0YWdzXSBHZXQgdGFnIHN1Y2Nlc3MnCn07CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25zVHlwZXMuZ2V0VGFnU3RhcnQsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLmlzTG9hZGluZyA9IHRydWU7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25zVHlwZXMuZ2V0VGFnU3VjY2VzcywgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2UsIHN0YXRlLmRhdGEgPSBwYXlsb2FkOwp9KSwgX211dGF0aW9ucyk7CnZhciBhY3Rpb25zID0gewogIGdldFRhZzogZnVuY3Rpb24gZ2V0VGFnKGNvbnRleHQpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICBjb250ZXh0LmNvbW1pdChtdXRhdGlvbnNUeXBlcy5nZXRUYWdTdGFydCk7CiAgICAgIHRhZ0FwaS5nZXRUYWdzKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdChtdXRhdGlvbnNUeXBlcy5nZXRUYWdTdWNjZXNzLCByZXNwb25zZS5kYXRhKTsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coImZhaWwiKTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/src/store/modules/tags.js"],"names":["tagApi","state","data","isLoading","error","getters","mutationsTypes","getTagStart","getTagSuccess","mutations","payload","actions","getTag","context","Promise","resolve","commit","getTags","then","response","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,YAAnB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,IADI;AAEVC,EAAAA,SAAS,EAAE,KAFD;AAGVC,EAAAA,KAAK,EAAE;AAHG,CAAd;AAMA,IAAMC,OAAO,GAAG;AACZH,EAAAA,IAAI,EAAE,cAAAD,KAAK,EAAI;AACX,WAAOA,KAAK,CAACC,IAAb;AACH,GAHW;AAIZE,EAAAA,KAAK,EAAE,eAAAH,KAAK,EAAI;AACZ,WAAOA,KAAK,CAACG,KAAb;AACH;AANW,CAAhB;AASA,OAAO,IAAME,cAAc,GAAG;AAC1BC,EAAAA,WAAW,EAAE,sBADa;AAE1BC,EAAAA,aAAa,EAAE;AAFW,CAAvB;AAKP,IAAMC,SAAS,iDACVH,cAAc,CAACC,WADL,YACkBN,KADlB,EACwB;AAC/BA,EAAAA,KAAK,CAACE,SAAN,GAAkB,IAAlB;AACH,CAHU,+BAIVG,cAAc,CAACE,aAJL,YAIoBP,KAJpB,EAI0BS,OAJ1B,EAIkC;AACzCT,EAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB,EACAF,KAAK,CAACC,IAAN,GAAaQ,OADb;AAEH,CAPU,cAAf;AAWA,IAAMC,OAAO,GAAG;AACZC,EAAAA,MADY,kBACLC,OADK,EACG;AACX,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BF,MAAAA,OAAO,CAACG,MAAR,CAAeV,cAAc,CAACC,WAA9B;AACAP,MAAAA,MAAM,CAACiB,OAAP,GACCC,IADD,CACM,UAAAC,QAAQ,EAAG;AACbN,QAAAA,OAAO,CAACG,MAAR,CAAeV,cAAc,CAACE,aAA9B,EAA4CW,QAAQ,CAACjB,IAArD;AACAa,QAAAA,OAAO,CAACI,QAAQ,CAACjB,IAAV,CAAP;AACH,OAJD,WAKO,YAAK;AACVkB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,OAPD;AAQH,KAVM,CAAP;AAWH;AAbW,CAAhB;AAgBA,eAAc;AACVpB,EAAAA,KAAK,EAALA,KADU;AAEVQ,EAAAA,SAAS,EAATA,SAFU;AAGVE,EAAAA,OAAO,EAAPA,OAHU;AAIVN,EAAAA,OAAO,EAAPA;AAJU,CAAd","sourcesContent":["import tagApi from \"@/api/tags\"\n\nconst state = {\n    data: null,\n    isLoading: false,\n    error: null,\n}\n\nconst getters = {\n    data: state => {\n        return state.data\n    },\n    error: state => {\n        return state.error\n    }\n}\n\nexport const mutationsTypes = {\n    getTagStart: '[tags] Get tag start',\n    getTagSuccess: '[tags] Get tag success',\n}\n\nconst mutations = {\n    [mutationsTypes.getTagStart](state){\n        state.isLoading = true\n    },\n    [mutationsTypes.getTagSuccess](state,payload){\n        state.isLoading = false,\n        state.data = payload\n    },\n    \n}\n\nconst actions = {\n    getTag(context){\n        return new Promise(resolve => {\n            context.commit(mutationsTypes.getTagStart)\n            tagApi.getTags()\n            .then(response =>{\n                context.commit(mutationsTypes.getTagSuccess,response.data)\n                resolve(response.data)\n            })\n            .catch(()=> {\n              console.log(\"fail\")\n            })\n        })\n    }\n}\n\nexport default{\n    state,\n    mutations,\n    actions,\n    getters\n}"]}]}