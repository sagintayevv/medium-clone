{"remainingRequest":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/src/components/Feed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/src/components/Feed.vue","mtime":1670480136590},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/cache-loader/dist/cjs.js","mtime":1670213592618},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/babel-loader/lib/index.js","mtime":1670213592708},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/cache-loader/dist/cjs.js","mtime":1670213592618},{"path":"/Users/sagintayevv/Desktop/My Course/vue-git/medium-clone/node_modules/vue-loader/lib/index.js","mtime":1670213592883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNY3ZQYWdpbmF0aW9uIGZyb20gIkAvY29tcG9uZW50cy9QYWdpbmF0aW9uIjsKaW1wb3J0IE1jdkxvYWRpbmcgZnJvbSAiQC9jb21wb25lbnRzL0xvYWRpbmciOwppbXBvcnQgTWN2RXJyb3JNZXNzYWdlIGZyb20gIkAvY29tcG9uZW50cy9FcnJvck1lc3NhZ2UiOwppbXBvcnQgeyBzdHJpbmdpZnksIHBhcnNlVXJsIH0gZnJvbSAicXVlcnktc3RyaW5nIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNY3ZGZWVkIiwKICBwcm9wczogewogICAgYXBpVXJsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpbWl0OiAxMCwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBNY3ZQYWdpbmF0aW9uLAogICAgTWN2TG9hZGluZywKICAgIE1jdkVycm9yTWVzc2FnZSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0xvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5mZWVkLmlzTG9hZGluZzsKICAgIH0sCiAgICBmZWVkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZmVlZC5kYXRhOwogICAgfSwKICAgIGN1cnJlbnRQYWdlKCkgewogICAgICByZXR1cm4gTnVtYmVyKHRoaXMuJHJvdXRlLnF1ZXJ5LnBhZ2UpIHx8IDE7CiAgICB9LAogICAgYmFzZVVybCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhdGg7CiAgICB9LAogICAgb2Zmc2V0KCkgewogICAgICByZXR1cm4gdGhpcy5jdXJyZW50UGFnZSAqIDEwIC0gMTA7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hGZWVkKCkgewogICAgICBjb25zdCBwYXJzZWRVcmwgPSBwYXJzZVVybCh0aGlzLmFwaVVybCk7CiAgICAgIGNvbnN0IHN0cmluZ2lmaWVkUGFyYW1zID0gc3RyaW5naWZ5KHsKICAgICAgICBsaW1pdDogMTAsCiAgICAgICAgb2Zmc2V0OiB0aGlzLm9mZnNldCwKICAgICAgICAuLi5wYXJzZWRVcmwucXVlcnksCiAgICAgIH0pOwogICAgICBjb25zdCBhcGlVcmxXaXRoUGFyYW1zID0gYCR7cGFyc2VkVXJsLnVybH0/JHtzdHJpbmdpZmllZFBhcmFtc31gOwogICAgICBjb25zb2xlLmxvZyhhcGlVcmxXaXRoUGFyYW1zKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImdldEZlZWQiLCB7IGFwaVVybDogYXBpVXJsV2l0aFBhcmFtcyB9KTsKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgY3VycmVudFBhZ2UoKSB7CiAgICAgIHRoaXMuZmV0Y2hGZWVkKCk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZmV0Y2hGZWVkKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Feed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Feed.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <mcv-loading v-if=\"isLoading\" />\n    <mcv-error-message :message=\"'foo'\" />\n    <div v-if=\"feed\">\n      <div\n        class=\"article-preview\"\n        v-for=\"(article, index) in feed.articles\"\n        :key=\"index\"\n      >\n        <div class=\"article-meta\">\n          <router-link\n            :to=\"{\n              name: 'userProfile',\n              params: { slug: article.author.username },\n            }\"\n          >\n            <img :src=\"article.author.image\" alt=\"\" />\n          </router-link>\n          <div class=\"info\">\n            <router-link\n              :to=\"{\n                name: 'userProfile',\n                params: { slug: article.author.username },\n              }\"\n            >\n              {{ article.author.username }}\n            </router-link>\n            <span class=\"date\">{{ article.createdAt }}</span>\n          </div>\n\n          <div class=\"pull-xs-right\">ADD TO FAV</div>\n        </div>\n        <router-link\n          :to=\"{ name: 'article', params: { slug: article.slug } }\"\n          class=\"preview-link\"\n        >\n          <h1>{{ article.description }}</h1>\n          <p>{{ article.title }}</p>\n          <span>Read more</span>\n          <ul class=\"tag-list\">\n            <li\n              v-for=\"(tag, index) in article.tagList\"\n              :key=\"index\"\n              class=\"tag-default tag-pill tag-outline\"\n            >\n              {{ tag }}\n            </li>\n          </ul>\n        </router-link>\n      </div>\n      <mcv-pagination\n        :total=\"feed.articlesCount\"\n        :limit=\"limit\"\n        :currentPage=\"currentPage\"\n        :url=\"baseUrl\"\n      />\n    </div>\n  </div>\n</template>\n  \n<script>\nimport McvPagination from \"@/components/Pagination\";\nimport McvLoading from \"@/components/Loading\";\nimport McvErrorMessage from \"@/components/ErrorMessage\";\nimport { stringify, parseUrl } from \"query-string\";\nexport default {\n  name: \"McvFeed\",\n  props: {\n    apiUrl: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      limit: 10,\n    };\n  },\n  components: {\n    McvPagination,\n    McvLoading,\n    McvErrorMessage,\n  },\n  computed: {\n    isLoading() {\n      return this.$store.state.feed.isLoading;\n    },\n    feed() {\n      return this.$store.state.feed.data;\n    },\n    currentPage() {\n      return Number(this.$route.query.page) || 1;\n    },\n    baseUrl() {\n      return this.$route.path;\n    },\n    offset() {\n      return this.currentPage * 10 - 10;\n    },\n  },\n  methods: {\n    fetchFeed() {\n      const parsedUrl = parseUrl(this.apiUrl);\n      const stringifiedParams = stringify({\n        limit: 10,\n        offset: this.offset,\n        ...parsedUrl.query,\n      });\n      const apiUrlWithParams = `${parsedUrl.url}?${stringifiedParams}`;\n      console.log(apiUrlWithParams);\n      this.$store.dispatch(\"getFeed\", { apiUrl: apiUrlWithParams });\n    },\n  },\n  watch: {\n    currentPage() {\n      this.fetchFeed();\n    },\n  },\n  mounted() {\n    this.fetchFeed();\n  },\n};\n</script>"]}]}